;==================================================================================================
; NotOrBNotExpr
;==================================================================================================
var notOrBNotExprConstOps = [
    not false,
    not 1 > 2,
    not not true,
    not not 1 < 2,
    (~-1) == 0,
    (~-2) == 1
]

func testNotOrBNotExpr()
    assert(not false)
    assert(not 1 > 2)
    assert(not not true)
    assert(not not 1 < 2)
    assert((~-1) == 0)
    assert((~-2) == 1)

    var testNum = 0
    while testNum < 6 
        assert(notOrBNotExprConstOps[testNum])
        testNum++
    end
end

;==================================================================================================
; CompareExpr
;==================================================================================================
var compareExprConstOps = [
    2 == 2,
    not 1 == 2,
    not 3 == 2,
    not 2 != 2,
    1 != 2,
    3 != 2,
    1 < 2,
    not 2 < 2,
    not 3 < 2,
    1 <= 2,
    2 <= 2,
    not 3 <= 2,
    2 > 1,
    not 1 > 1,
    not 0 > 1,
    2 >= 1,
    1 >= 1,
    not 0 >= 1
]

func testCompareExpr()
    assert(2 == 2)
    assert(not 1 == 2)
    assert(not 3 == 2)
    assert(not 2 != 2)
    assert(1 != 2)
    assert(3 != 2)
    assert(1 < 2)
    assert(not 2 < 2)
    assert(not 3 < 2)
    assert(1 <= 2)
    assert(2 <= 2)
    assert(not 3 <= 2)
    assert(2 > 1)
    assert(not 1 > 1)
    assert(not 0 > 1)
    assert(2 >= 1)
    assert(1 >= 1)
    assert(not 0 >= 1)

    var testNum = 0
    while testNum < 18 
        assert(compareExprConstOps[testNum])
        testNum++
    end
end

;==================================================================================================
; ShiftExpr
;==================================================================================================
var shiftExprConstOpts = [
    1 << 0 == 1,
    1 << 1 == 2,
    2 << 2 == 8,
    8 >> 0 == 8,
    8 >> 1 == 4,
    8 >> 2 == 2,
    -8 >> 2 == -2,
    8 >>> 0 == 8,
    8 >>> 1 == 4,
    8 >>> 2 == 2,
    -1 >>> 63 == 1  ; FIXME - this won't work if int type is 32-bit
]

func testShiftExpr()
    assert(1 << 0 == 1)
    assert(1 << 1 == 2)
    assert(2 << 2 == 8)
    assert(8 >> 0 == 8)
    assert(8 >> 1 == 4)
    assert(8 >> 2 == 2)
    assert(-8 >> 2 == -2)
    assert(8 >>> 0 == 8)
    assert(8 >>> 1 == 4)
    assert(8 >>> 2 == 2)
    assert(-1 >>> 63 == 1)  ; FIXME - this won't work if int type is 32-bit

    var testNum = 0
    while testNum < 11
        assert(shiftExprConstOpts[testNum])
        testNum++
    end
end

;==================================================================================================
; AddSubExpr
;==================================================================================================
var addSubExprConstOps = [
    1 + 2 == 3,
    1 + +2 == 3,
    +1 + +2 == 3,
    1 + -2 == -1,
    -1 + -2 == -3,
    2 - 5 == -3,
    2 - -5 == 7,
    -2 - -5 == 3
]

func testAddSubExpr()
    assert(1 + 2 == 3)
    assert(1 + +2 == 3)
    assert(+1 + +2 == 3)
    assert(1 + -2 == -1)
    assert(-1 + -2 == -3)
    assert(2 - 5 == -3)
    assert(2 - -5 == 7)
    assert(-2 - -5 == 3)

    var testNum = 0
    while testNum < 9
        assert(addSubExprConstOps[testNum])
        testNum++
    end
end

;==================================================================================================
; MulDivExpr
;==================================================================================================
var mulDivExprConstOps = [
    2 * 2 == 4,
    2 * -2 == -4,
    -2 * -2 == 4,
    10 / 2 == 5,
    10 / -2 == -5,
    5 % 3 == 2,
    5 % 3 == 2
]

func testMulDivExpr()
    assert(2 * 2 == 4)
    assert(2 * -2 == -4)
    assert(-2 * -2 == 4)
    assert(10 / 2 == 5)
    assert(10 / -2 == -5)
    assert(5 % 3 == 2)
    assert(5 % -3 == 2)

    var testNum = 0
    while testNum < 7
        assert(mulDivExprConstOps[testNum])
        testNum++
    end
end

;==================================================================================================
; Run the tests
;==================================================================================================
func main() -> int
    ; Basic tests of AST grammar and operations
    testNotOrBNotExpr()
    testCompareExpr()
    testShiftExpr()
    testAddSubExpr()
    testMulDivExpr()
    return 0
end
