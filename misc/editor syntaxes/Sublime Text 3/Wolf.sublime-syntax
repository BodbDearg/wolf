%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Wolf Programming Language (0.01)
file_extensions:
  - wolf
scope: wolf
contexts:
  main:
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.wolf
      push:
        - meta_scope: string.quoted.double.wolf
        - match: '"'
          captures:
            0: punctuation.definition.string.end.wolf
          pop: true
        - match: '\\([abfnrtv\\"'']|\r?\n|\n\r?|\d\d?\d?)'
          scope: constant.character.escape.wolf
        - match: '\\[xX][0-9a-fA-F][0-9a-fA-F]'
          scope: constant.character.escape.wolf
        - match: '\\u\{[0-9a-fA-F]{,7}\}'
          scope: constant.character.escape.wolf
    - match: '(?<![\d.])\b0[xX][a-fA-F\d\.]+([pP][\-\+]?\d+)?|\b\d+(\.\d+)?([eE]-?\d+)?|\.\d+([eE]-?\d+)?'
      scope: constant.numeric.wolf    
    - match: '(?<![^.]\.|:)\b(false|true)\b|(?<![.])\.{3}(?!\.)'
      scope: constant.language.wolf
    - match: '\+|-|%|#|\*|\/|\^|==?|~=|<=?|>=?|(?<!\.)\.{2}(?!\.)'
      scope: keyword.operator.wolf
    - match: '(?<![^.]\.|:)\b(readnum|print)\b(?=[( {"''\[])'
      scope: support.function.wolf    
    - match: \b(and|or|not|elif|var|break|do|else|for|if|return|then|repeat|while|until|end|otherwise)\b
      scope: keyword.wolf
