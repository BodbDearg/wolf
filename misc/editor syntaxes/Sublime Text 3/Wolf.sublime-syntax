%YAML 1.2
---
#==================================================================================================
# The Wolf Programming Language.
#       Copyright (c) 2016, Darragh Coy.
#       See LICENSE.txt for license details.
#==================================================================================================

# http://www.sublimetext.com/docs/3/syntax.html
name: Wolf Programming Language (0.03)
file_extensions:
  - wolf
scope: wolf
contexts:
  main:
    - match: '/;'
      push: multiline_comment    
    - match: ';.*$'
      scope: comment.singleline.wolf
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.wolf
      push:
        - meta_scope: string.quoted.double.wolf
        - match: '"'
          captures:
            0: punctuation.definition.string.end.wolf
          pop: true
        - match: '\\([abfnrtv\\"'']|\r?\n|\n\r?|\d\d?\d?)'
          scope: constant.character.escape.wolf
        - match: '\\[xX][0-9a-fA-F][0-9a-fA-F]'
          scope: constant.character.escape.wolf
        - match: '\\u\{[0-9a-fA-F]{,7}\}'
          scope: constant.character.escape.wolf
    - match: '\b[0-9][0-9|_]*((u|U|i|I)(8|16|32|64|128)?)?\b'
      scope: constant.numeric.decimal_int.wolf
    - match: '\b0[b|B][0-1|_]*((u|U|i|I)(8|16|32|64|128)?)?\b'
      scope: constant.numeric.binary_int.wolf
    - match: '\b0[x|X][0-9|a-f|A-F|_]*((u|U|i|I)(8|16|32|64|128)?)?\b'
      scope: constant.numeric.hex_int.wolf
    - match: '\b0[o|O][0-7|_]*((u|U|i|I)(8|16|32|64|128)?)?\b'
      scope: constant.numeric.oct_int.wolf
    - match: '(?<![^.]\.|:)\b(false|true|null)\b|(?<![.])\.{3}(?!\.)'
      scope: constant.language.wolf
    - match: '\+|-|\*|\/|%|&|\?|\$|\||\^|!|=|<|>'
      scope: keyword.operator.wolf
    - match: '(?<![^.]\.|:)\b(time|assert|rand|srand|readnum|print)\b(?=[( {"''\[])'
      scope: support.function.wolf
    - match: \b(cast|to)\b
      scope: keyword.casting.wolf
    - match: \b(is|and|or|not)\b
      scope: keyword.logical.wolf
    - match: \b(then|end|do|scope)\b
      scope: keyword.blockdelims.wolf
    - match: \b(if|else|unless)\b
      scope: keyword.controlflow.if.wolf
    - match: \b(while|until|for|loop|repeat)\b
      scope: keyword.controlflow.loops.wolf
    - match: \b(break|next|return)\b
      scope: keyword.controlflow.modifiers.wolf
    - match: \b(func)\b
      scope: keyword.functions.wolf
    - match: \b(let|noop)\b
      scope: keyword.misc.wolf
    - match: \b(void|bool|int|int128|int64|int32|int16|int8|uint|uint128|uint64|uint32|uint16|uint8|float|char|uchar|string|ustring)\b
      scope: storage.type.wolf
  multiline_comment:
    - meta_scope: comment.multiline.wolf
    - match: ';/'
      pop: true
