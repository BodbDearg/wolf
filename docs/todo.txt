********************** 
***** Priority 1 *****
********************** 

- Implement and test implicit type promotion to bool for:
	- while
	- if
	- loop repeat
	- assert
	- next if/break if
	- return if
	- ternary operator
	- logical and/or and not
- Implement and unit test implicit casting on 'return'
- Implement and unit test implicit casting in assign expressions
- Implement and unit test implicit casting in passing function args
- Implement and unit test implicit casting in ternary operator

- Test implicit casting in several types of binary expressions
	Cmp/Add/Mul/Shift
- Test implicit casting in var decls
	- Global and local

- Test use of 'any' pointers and casting to/from them
- Test implicit casting to and from any pointers
	- Check logic for all the cases
- Test implicit cast of ?pointers to bool
	- Test at runtime
	- Test at compile time
	- Note: don't allow for non nullable pointers!
- Test implicit casting non ^pointer to ?pointer of the same type
	- Test at runtime
	- Test at compile time

********************** 
***** Priority 2 *****
********************** 

- [] operator should dereference pointers
- '! operator'
- Don't allow dereference of nullable pointers

- Allow an extra ',' at the end of array literals
	- Also write a test for this

- Fix this bug:
    let blah = [1, 2, 3, 4]
    let blahPtr = &blah
    print(($blahPtr)[1])

********************** 
***** Priority 3 *****
**********************

- Emit a compile error if an integer literal can't fit in it's type
- Fix this bug:
	let blah : uint = 18_446_744_073_709_551_615

- Fix up random 'new' allocations throughout the codebase
	- Use linear alloc

- Fix this bug:
	func blah()
	    print("Hello")
	end

	func main() -> int
	    let test = blah
	    test()
	    return 0
	end 