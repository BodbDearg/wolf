- Pointer arithmetic: distance
- Casting pointers to integers and visa versa
- Casting pointers to other pointer types
- Impl codegen for const add/sub pointer arithmetic
	- Issue appropriate error msg
- Don't allow dereference of nullable pointers
- '! operator'
- Emit a compile error if an integer literal can't fit in it's type
- Unit test implicit type promotion to bool for:
	while()
	if()
	loop repeat()

- Unit test implicit casting of 'null'
- Unit test pointer arithmetic
	- add/sub
	- inc/dec
	- ptr distance
- Unit test various runtime integer implicit casting
- Unit test implicit cast of pointers to bool
- Unit test allowed compile time implicit casts
	- Especially for ints
- Unit test implicit casting non nullable pointer to nullable pointer of the same type
- Unit test implicit type promotion for binary expressions
- Unit test implicit type promotion to bool for:
	while()
	if()
	loop repeat()
- Unit test binary expression left to right and right to left implicit casting

- Fix up random 'new' allocations throughout the codebase
	- Use linear alloc

- Fix this bug:
	let blah : uint = 18_446_744_073_709_551_615

- Fix this bug:
    let blah = [1, 2, 3, 4]
    let blahPtr = &blah
    print(($blahPtr)[1])

- Fix this bug:
	func blah()
	    print("Hello")
	end

	func main() -> int
	    let test = blah
	    test()
	    return 0
	end
